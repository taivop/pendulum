<project name="Pendelprojekt" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
	<property name="lib"  location="lib"/>
  

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" includeantruntime="false">
		<classpath id="build-classpath">
			<pathelement path="${classpath}"/>
			<fileset dir="lib">
				<include name="lti-civil/*.jar"/>
				<include name="lti-civil/native/*"/>
				<include name="commons-math/*.jar"/>
				<include name="ij/*.jar"/>
			</fileset>
		</classpath>
	</javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
	
  	<manifestclasspath property="lib.list" jarfile="${dist}/lib/Pendel-${DSTAMP}.jar">
  	    <classpath refid="build-classpath"/>
  	</manifestclasspath>
  	
    <!-- Put everything in ${build} into the Pendel-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/Pendel-${DSTAMP}.jar">
    	<fileset dir="${build}" />
    	<fileset dir="${lib}" includes="**/*.jar"/>
	<manifest>
		<attribute name="Main-Class" value="esimene.MainCameraWatcher"/>
		<attribute name="Class-Path" value="${lib.list}"/>
	</manifest>
	</jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>